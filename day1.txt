# go to the cloud lab
click home and systemtools and lxterminal
sudo su -  === give password as Welcome@123
execute => apt-get install ssh
ssh ec2-user@Ip given in excel screenshot
user = ec2-user
password = redhat@8952

execute sudo su -

make sure you are on root.
yum install docker -y
systemctl start docker
systemctl enable docker
systemctl status docker

go to hub.docker.com, explore httpd,mysql,haprxy,redis images with their tag and read some content.

docker info
docker version
docker images
docker pull quay.io/kushalsamota/centos
docker images
docker pull docker.io/mysql
docker images
docker pull docker.io/mysql:5.6
docker images
#note ---- if docker pull limit error you face move to next command.
docker pull quay.io/kushalsamota/httpd
docker inspect quay.io/kushalsamota/httpd ============ see the cmd and all other things
docker inspect quay.io/kushalsamota/centos ============ see the cmd and all other things

#task -- create a account on docker.io and verify it with email sent to registered email address. Do not forget to verify it.
docker login docker.io
#give docker.io username and password and you will see a login succeeded message.
docker images
docker tag <image id of centos>  docker.io/<yourdockerusername>/javagpg:v1
docker push docker.io/<yourdockerusername>/javagpg:v1
#go to docker.io and confirm whether the image has been uploaded or not.

docker rmi <imageid of centos image>
docker images
docker system df
docker pull quay.io/kushalsamota/httpd
docker images
docker save <imageid of httpd image> -o httpd.tar
docker rmi quay.io/kushalsamota/httpd
docker images ==== you wont see the image
ls  === you will see a tar file
docker load -i httpd.tar
docker images === you will see a image with no name that is a dangling image
docker tag <imageid of that image> httpd:latest
docker images

docker rmi $(docker images -a -q)
docker images ==== if you still see some images than remove them with their name by using docker rmi <name of image>

##################################################################
container exercise
##################################################################

docker run -itd --name centoscontainer quay.io/kushalsamota/centos
docker ps
docker ps -a
docker rm centoscontainer
docker stop centoscontainer
docker rm centoscontainer
docker ps
docker run -itd --name centoscontainer quay.io/kushalsamota/centos
docker ps
docker run -d --name apachecontainer quay.io/kushalsamota/httpd
docker exec -it apachecontainer bash ==== to go in container
exit
docker ps
docker exec -it centoscontainer hostname
docker exec -it centoscontainer cat /etc/redhat-release
docker exec -it centoscontainer cat /etc/passwd
docker rm -f centoscontainer apachecontainer
docker run -d --name mysqlcontainer -e MYSQL_ROOT_PASSWORD=redhat mysql:5.6
docker ps
docker exec -it mysqlcontainer bash
mysql -u root -p ==== give redhat as password on prompt
show databases;
exit
exit
docker ps
docker rm -f mysqlcontainer

docker run -d --name tomcatcontainer docker.io/tomcat:9.0
docker inspect tomcatcontainer ==== see all info about container
docker rm -f tomcatcontainer
docker rm -f $(docker ps -a -q)  == this will remove all the container forcefully
docker system df
docker ps
docker run --help | grep cpu   === you can limit cpu
docker run --help | grep memory === you can limit memory

# copy the file inside container and from container
docker run -itd --name centoscontainer centos
touch /index.html
docker cp /index.html centoscontainer:/
docker exec -it centoscontainer ls /
docker cp centoscontainer:/etc/passwd  /
ls /
docker rm -f centoscontainer
docker run -d --name apachecontainer httpd
docker logs apachecontainer
docker rm -f apachecontainer
done...!

